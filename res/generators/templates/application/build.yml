## Note: sdk is full path to Rhodes root. If not defined - automatically find latest installed Rhodes gem
#sdk: "<%=@sdk_path%>"
sdkversion: <%=Rhodes::VERSION%>
name: <%=@app_name%>
version: 1.0
vendor: rhomobile
## Note: rho_app_id send to RhoConnect server for identify application (used in multi-push configuration only)
## we recommend make it same with BundleIdentifier
rho_app_id: com.rhomobile.<%=@app_name_cleared%>
build: debug
applog: rholog.txt

# enable encrypt of database
#encrypt_database: 1

# enable encryption of bundle by AES (only for iOS and Adnroid)
# key should be generated by this command:
# $ rake build:bundle:generate_AES_key
#encrypt_files_key: "9kefijsPZjfOHDWNhpKiiq3bbewg5rgv83Hb/qMAQSw="
#encrypt_file_extensions:
#  - html
#  - js
#  - css
#  - iseq

## Note: enbale it for use new style of iOS top status bar(battery info, etc.) - status bar is transparency and over application window
#iphone_use_new_ios7_status_bar_style: 1

## Note: enable this for force iOS full screen (top status bar with battery info etc. is hidden)
#iphone_full_screen: 1

## Note: set this to 0 for remove title bar of Android application
## also setup "full_screen" in rhoconfig.txt
#android_title: 0

## Note: enable specific device capabilities for aplication
#capabilities:
  ## allows use of audio hardware (record audio, modify audio settings)
  #- audio
  ## allows use of hardware camera
  #- camera
  ## allows use of geo location service
  #- gps
  ## allows read device network state (connected/disconnected)
  #- network_state
  ## allow make calls/read phone state
  #- phone
  ## allow read/modify personal information and contacts
  #- pim
  ## allows use of PUSH on device
  #- push
  ## allows use of hardware vibration mechanism
  #- vibrate
  ## allows use of bluetooth hardware
  #- bluetooth
  ## allows access to default device calendar
  #- calendar
  ## allows writing to the SD card on Android devices
  #- sdcard
  #- install_packages
  ## add UIWebView code to project - now UIWebView deprecated by Apple - You can not submit application with UIWebView to AppStore !
  ## You can select type of WebView in rhoconfig.txt - see ios_use_WKWebView option
  #- ios_uiwebview
  ## iOS do not support direct(intercept by application's code) http/https request processing in WKWebView
  ## add this capability for add some code with support this feature by some "unofficial" method.
  ## set ios_direct_local_requests = 1 in rhoconfig.txt for use this code
  ## ios_wkwebview_http_direct_processing_method_2 is recommended because it is small lightweight access to undocumented API
  #- ios_wkwebview_http_direct_processing
  #- ios_wkwebview_http_direct_processing_method_2
  #- ios_wkwebview_http_direct_processing_method_3

iphone:
  configuration: Release
  ## emulatortarget can be "iphone", "ipad" or UUID or Name of already exist simulator
  #emulatortarget: iphone
  ## Note: sdk can be 3 predefined value : latest, latest_simulator, latest_device
  ## simulator or device detect by rake command for "rake run:iphone" is simulator, for "rake device:iphone:production" is device
  ## sdk also can be defined exactly like:  iphonesimulator10.2 or iphoneos10.2
  sdk: latest
  ## parameters for override ARHCS option when build XCode projects
  #ARCHS_simulator : ["i386", "x86_64"]
  #ARCHS_device : ["arm64", "arm64e", "armv7", "armv7s"]
  #leave one architecture for decrease build time during development
  #You must define "arm64" architecture for ARCHS_simulator on M CPU based computers !
  ARCHS_simulator : ["x86_64"]
  ARCHS_device : ["arm64"]
  ## Use launch screen storyboard instead of launch screen images (old style launch images)
  ## recommended to enable, default - enabled
  #enable_launch_screen_storyboard: false
  ## Note: Provisioning
  ## There are two provisioning type for modern XCode: Automatic and Manual
  ## development_team must be configured for any type provisioning
  ## you see team code by run this command:
  ## $ security find-identity -p codesigning -v
  ## you will see list of certificates and you should copy code from "iPhone Distribution" line like this (code is PNQRMU3LPM):
  ## 5) D6D5EE35B3F8D9C04E85C7015539F04B38403DA3 "iPhone Distribution: Vasya Pupkin (PNQRMU3LPM)"
  ##
  ## Note: This is Automatic provisioning configuration:
  #provisioning_style: Automatic
  #development_team: "PNQRMU3LPM"
  ##
  ## Note: This is Manual provisioning configuration:
  ## provisionprofile can be defined as name or UUID - if you defined provisionprofile then codesignidentity defined automatically if you not defined it in this build.yml
  #provisionprofile: "Current WildCart 05"
  #provisioning_style: Manual
  #development_team: "PNQRMU3LPM"
  #codesignidentity: "iPhone Developer"
  ##
  #entitlements:
  BundleIdentifier: com.rhomobile.<%=@app_name_cleared%>
  BundleURLScheme: <%=@app_name_cleared%>
  ## Note: Specifies the URL schemes the app is able to call using Rho.System.runApplication
  #ApplicationQueriesSchemes: ['scheme1', 'scheme2']
  ## Note: Specifies list of HTTP domains for connect from application
  #http_connection_domains: ['domain1.com', 'domain2.org']
  ## Note: Specify remove of Info.plist keys - use this if you need to remove some keys from Info.plist
  ## This example remove two keys with unsupported screen orientation
  #info_plist_data_remove:
  #- UISupportedInterfaceOrientations: ['UIInterfaceOrientationLandscapeLeft', 'UIInterfaceOrientationLandscapeRight']
  ## Note: Specifies set/modify of Info.plist keys with content(hash) - all of this items will be apply to final Info.plist of application. You can specify any Ino.plist data in this parameter.
  ## This example allow all HTTP connections in application:
  #info_plist_data:
  #  NSAppTransportSecurity:
  #    NSAllowsArbitraryLoads: true
  ## if you use "barcode" extension on iOS, you can switch barcode recognize engine: APPLE_BARCODE_ENGINE(default), ZXING, ZBAR
  #barcode_engine: APPLE_BARCODE_ENGINE
  ## control of bitcode generations - true by default, but you can disable it by set false
  ## disable it for decrease build time during development
  enable_bitcode: false

uwp:
  productid: '<%=@productid%>'
  target: 'ARM'

android:
  #manifest_template: 'AndroidManifest.erb'

  abis:
  - arm
  - aarch64
  
  #specifies compile SDK version ( 9 corresponds to API 28). If not specified then latest available API level will be used.  
  #version: 9 

  #targetSDK: 28

  ## set to true if you want to setup your app as system home app (launcher)
  ## also recommended add this into manifest also: android:launchMode='singleTask'
  #home_app = true

  ## Note: in order to simplify debugging only app messages and system channels with priority informative and higher, and any errors are enabled by default
  logcatFilter: APP:I StrictMode:I DEBUG:I *:E

## Note: setup android_title to 0 for remove default window titlebar in Android application
#android_title: 0

#linux build section
linux:

wm:
  #sdk: "MC3000c50b (ARMV4I)"
  #sdk: "Windows Mobile 6.5.3 Professional DTK (ARMV4I)"
  extensions:
    - webkit

win32:
  deployqt: 1
  deploymsvc: 1
  msvc: 2017


sailfish:
  configuration: Release
  target: 'arm'
  organization: "ru.tauplatform"
  device:
    #device_name: "Aurora OS эмулятор 4.0.2.249-base"
    device_name: "INOI P4903 (ARM)"
    user: defaultuser

  extensions: ["mediacapture", "barcode", "signature", "serialport"]



extensions: [<%=@rhoconnectclient_ext%>]

rhobundle:
  exclude_items:
  - thumb.db
